--USE tempdb;

--IF OBJECT_ID(N'DBO.V', N'V') IS NOT NULL DROP VIEW DBO.V;
--IF OBJECT_ID(N'DBO.T3', N'U') IS NOT NULL DROP TABLE DBO.T3;
--IF OBJECT_ID(N'DBO.T2', N'U') IS NOT NULL DROP TABLE DBO.T2;
--IF OBJECT_ID(N'DBO.T1', N'U') IS NOT NULL DROP TABLE DBO.T1;


--GO 

--CREATE TABLE DBO.T1(
--KEYCOL INT NOT NULL CONSTRAINT PL_T1 PRIMARY KEY,
--COL1 INT NOT NULL
--)

--CREATE TABLE dbo.T2
--(
--keycol INT NOT NULL
--CONSTRAINT PK_T2 PRIMARY KEY
--CONSTRAINT FK_T2_T1 REFERENCES dbo.T1,
--col2 INT NOT NULL
--);
--CREATE TABLE dbo.T3
--(
--keycol INT NOT NULL
--CONSTRAINT PK_T3 PRIMARY KEY
--CONSTRAINT FK_T3_T1 REFERENCES dbo.T1,
--col3 INT NOT NULL
--);
--GO

--CREATE VIEW DBO.V WITH SCHEMABINDING

--AS 
--SELECT  T1.COL1 , T1.KEYCOL, T2.col2, T3.col3
--FROM DBO.T1
--INNER JOIN DBO.T2
--ON T1.KEYCOL = T2.keycol
--INNER JOIN DBO.T3
--ON T1.KEYCOL = T3.KEYCOL;



--SELECT * FROM dbo.V;


-- INLINE TABLE VALUE FUNCTION
--USE TSQLV3

--IF OBJECT_ID(N'DBO.GETTOPORDERS',N'IF') IS NOT NULL DROP FUNCTION
--DBO.GETTOPORDERS;

--GO
--CREATE FUNCTION DBO.GETTOPORDERS(@CUSTID AS INT, @N AS BIGINT) RETURNS TABLE
--AS 
--RETURN

--SELECT TOP (@N) ORDERID, ORDERDATE, EMPID
--FROM SALES.ORDERS
--WHERE CUSTID = @CUSTID
--ORDER BY ORDERDATE DESC, ORDERID DESC;
--GO


--SELECT ORDERID, ORDERDATE, EMPID
--FROM DBO.GETTOPORDERS(1,3) AS O;

--GENERATING NUMBERS

CREATE FUNCTION DBO.GETNUMS(@LOW AS INT, @HIGH AS INT) RETURNS TABLE 
AS 
RETURN 
SELECT c FROM (VALUES(1), (1)) AS D(C);